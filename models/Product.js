const mongoose = require('mongoose');

const productSchema = new mongoose.Schema({

    pro_id: {
      type: Number,
      required: true,
      unique: true, // ‚¨ÖÔ∏è CRITICAL: ‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
      trim: true,
      // ‡∏≠‡∏≤‡∏à‡πÄ‡∏û‡∏¥‡πà‡∏° index: true ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    },
    pro_name: {
        type: String,
        trim: true,
    },
    // üîë Tech Stack: passwordHash ‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≠‡∏Å‡πÇ‡∏î‡∏¢‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (Security)
    pro_des: {
        type: String
    },
    
    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Profile (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Update)
    pro_price: { type: Number, trim: true },
    pro_time: { type: Number, required: true, default: 0 },
    pro_status: {
        type: String,
        trim: true,
    },
    pro_islike: { type: Boolean , default: false },
    pro_imgurl: { type: String },
    pro_datecome: { type: Date},
    pro_dateend: { type: Date},
    pro_accby: { type: String}
}, {
    // üí° UX/UI: ‡πÉ‡∏´‡πâ Mongoose ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ timestamp ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (createdAt, updatedAt)
    timestamps: true 
});

// ‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Logic `getNextUserId` ‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ MongoDB ‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á _id ‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏á (ObjectId)

module.exports = mongoose.model('Product', productSchema);