const mongoose = require("mongoose");
const crypto = require('crypto'); // üí° Tech Stack: ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á Random Token

const userSchema = new mongoose.Schema(
  {
    acc_id: {
      type: Number,
      required: true,
      unique: true, // ‚¨ÖÔ∏è CRITICAL: ‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
      trim: true,
      // ‡∏≠‡∏≤‡∏à‡πÄ‡∏û‡∏¥‡πà‡∏° index: true ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    },
    acc_username: {
      type: String,
      required: true,
      unique: true,
      trim: true,
    },
    acc_password: {
      type: String,
      required: true,
      select: false, // ‚¨ÖÔ∏è CRITICAL: ‡πÑ‡∏°‡πà‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Find ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
    },

    acc_firstname: { type: String, trim: true },
    acc_lastname: { type: String, trim: true },
    acc_email: {
      type: String,
      required: true,
      unique: true,
      trim: true,
    },
    acc_phone: { type: String, trim: true },
    acc_address: { type: String },
    acc_coin: { type: Number },
    acc_createdate: {type: Date},
    resetPasswordToken: { type: String },     // ‡πÄ‡∏Å‡πá‡∏ö Hash ‡∏Ç‡∏≠‡∏á Token ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏•‡πâ‡∏ß
    resetPasswordExpire: { type: Date },      // ‡πÄ‡∏Å‡πá‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà/‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà Token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
  },
  {
    timestamps: true,
  }
);


userSchema.methods.getResetPasswordToken = function() {
    // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Token ‡πÅ‡∏ö‡∏ö Plain Text (Random String)
    const resetToken = crypto.randomBytes(20).toString('hex');

    // 2. Hash Token ‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô DB (Security)
    this.resetPasswordToken = crypto
        .createHash('sha256')
        .update(resetToken)
        .digest('hex');

    // 3. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (‡πÄ‡∏ä‡πà‡∏ô 20 ‡∏ô‡∏≤‡∏ó‡∏µ)
    this.resetPasswordExpire = Date.now() + 20 * 60 * 1000; // 20 minutes in milliseconds

    // 4. Return Token ‡πÅ‡∏ö‡∏ö Plain Text (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÉ‡∏ô Email)
    return resetToken;
};

module.exports = mongoose.model("User", userSchema);
