const jwt = require('jsonwebtoken');
require('dotenv').config(); // üí° ‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î .env ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ

const JWT_SECRET = process.env.JWT_SECRET;
const JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN || '1h';

exports.generateAuthToken = (userPayload) => {
    // üîë Tech Stack: jwt.sign(payload, secret, options)
    const token = jwt.sign(
        // 1. Payload: ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡πà‡∏≠‡∏ô
        { 
            id: userPayload.acc_id, // üí° ‡πÉ‡∏ä‡πâ Custom ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            username: userPayload.acc_username,
            email: userPayload.acc_email
        }, 
        // 2. Secret: ‡∏Å‡∏∏‡∏ç‡πÅ‡∏à‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ Sign
        JWT_SECRET,
        // 3. Options: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
        { expiresIn: JWT_EXPIRES_IN } 
    );
    return token;
};