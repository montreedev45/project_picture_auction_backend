const Counter = require('../models/Counter'); 

exports.getNextSequenceValue = async (collectionName) => {
    // üîë Tech Stack: ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ findOneAndUpdate ‡∏Å‡∏±‡∏ö $inc: { sequence_value: 1 } 
    // ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å (‡πÄ‡∏ä‡πà‡∏ô acc_id) ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Query ‡∏´‡∏£‡∏∑‡∏≠ Update Body
    const counter = await Counter.findOneAndUpdate(
        // 1. QUERY: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢ _id (‡∏ä‡∏∑‡πà‡∏≠ Collection)
        { _id: collectionName }, 
        
        // 2. UPDATE: ‡πÉ‡∏ä‡πâ $inc ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå sequence_value ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        { $inc: { sequence_value: 1 } }, 
        
        // 3. OPTIONS: New Document ‡πÅ‡∏•‡∏∞ Upsert
        { new: true, upsert: true }
    );
    
    if (!counter) {
        throw new Error(`Failed to initialize or retrieve counter for ${collectionName}`);
    }
    return counter.sequence_value;
};